name: CI Backoffice

on:
  push:
    branches: [main]
    paths:
      - 'backoffice/**'
      - '.github/workflows/ci-cd.yml'
  pull_request:
    branches: [main]
    paths:
      - 'backoffice/**'
      - '.github/workflows/ci-cd.yml'

jobs:
  ci-backoffice:
    name: CI Backoffice
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backoffice

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'backoffice/package-lock.json'

      - name: Use latest npm (mitiga bug optional deps)
        run: npm i -g npm@latest

      - name: Clean install deps (regenera lock en Linux)
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Generate Prisma client
        run: npx prisma generate --schema=prisma/schema.prisma

      - name: Apply database migrations
        run: |
          # First try to apply migrations normally
          if ! npx prisma migrate deploy --schema=prisma/schema.prisma; then
            echo "Migration failed, checking for failed migrations..."
            # Get the status and look for failed migrations
            npx prisma migrate status --schema=prisma/schema.prisma || true
            # Try to resolve common migration issues automatically
            echo "Attempting to resolve failed migrations..."
            npx prisma migrate resolve --applied 20250820035608_add_transfer_payment_status --schema=prisma/schema.prisma || true
            npx prisma migrate resolve --applied 20250820040759_add_payment_status_states --schema=prisma/schema.prisma || true
            # Try deploy again
            npx prisma migrate deploy --schema=prisma/schema.prisma
          fi
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://user:password@localhost:5432/test' }}
          DIRECT_URL: ${{ secrets.DIRECT_URL || 'postgresql://user:password@localhost:5432/test' }}

      - name: Verify migrations sync with main project
        run: |
          echo "Checking if backoffice migrations are in sync with main project..."
          if [ ! -d "$GITHUB_WORKSPACE/prisma/migrations" ]; then
            echo "❌ Main project migrations directory not found"
            exit 1
          fi

          # Compare migration directories
          MAIN_MIGRATIONS=$(find "$GITHUB_WORKSPACE/prisma/migrations" -name "*.sql" | sort)
          BACKOFFICE_MIGRATIONS=$(find prisma/migrations -name "*.sql" | sort)

          # Get just the filenames for comparison
          MAIN_FILES=$(echo "$MAIN_MIGRATIONS" | xargs -I {} basename {} | sort)
          BACKOFFICE_FILES=$(echo "$BACKOFFICE_MIGRATIONS" | xargs -I {} basename {} | sort)

          if [ "$MAIN_FILES" != "$BACKOFFICE_FILES" ]; then
            echo "❌ Migration files are not synchronized!"
            echo "Main project migrations:"
            echo "$MAIN_FILES"
            echo "Backoffice migrations:"
            echo "$BACKOFFICE_FILES"
            exit 1
          fi

          echo "✅ Migrations are synchronized between projects"

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run type-check

      - name: Test
        run: npm run test:ci
        env:
          DATABASE_URL: 'postgresql://user:password@localhost:5432/test'
          DIRECT_URL: 'postgresql://user:password@localhost:5432/test'
          NEXTAUTH_SECRET: 'test-secret-key'
          NEXTAUTH_URL: 'http://localhost:3001'
          NEXTAUTH_BACKOFFICE_URL: 'http://localhost:3001'

      - name: Build check
        run: npm run build:vercel
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://user:password@localhost:5432/test' }}
          DIRECT_URL: ${{ secrets.DIRECT_URL || secrets.DATABASE_URL || 'postgresql://user:password@localhost:5432/test' }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET || 'test-secret-key' }}
          NEXTAUTH_URL: 'http://localhost:3001'
          NEXTAUTH_BACKOFFICE_URL: 'http://localhost:3001'
