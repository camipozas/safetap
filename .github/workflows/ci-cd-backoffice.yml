name: CI/CD Pipeline Backoffice

on:
  push:
    branches: [main, develop]
    paths:
      - 'backoffice/**'
      - '.github/workflows/ci-cd.yml'
  pull_request:
    branches: [main]
    paths:
      - 'backoffice/**'
      - '.github/workflows/ci-cd.yml'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID_BACKOFFICE: ${{ secrets.VERCEL_PROJECT_ID_BACKOFFICE }}

jobs:
  # Test and lint backoffice
  test-backoffice:
    name: Test Backoffice
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'backoffice/package-lock.json'

      - name: Install dependencies
        working-directory: ./backoffice
        run: npm ci

      - name: Run linting
        working-directory: ./backoffice
        run: npm run lint

      - name: Run type checking
        working-directory: ./backoffice
        run: npm run type-check

      - name: Run tests
        working-directory: ./backoffice
        run: npm run test

  # Deploy backoffice to Vercel
  deploy-backoffice:
    name: Deploy Backoffice
    needs: test-backoffice
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        working-directory: ./backoffice
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_BACKOFFICE }}

      - name: Build Project Artifacts
        working-directory: ./backoffice
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_BACKOFFICE }}

      - name: Deploy Project Artifacts to Vercel
        working-directory: ./backoffice
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_BACKOFFICE }}

  # Preview deployment for PRs
  preview-deploy-backoffice:
    name: Preview Deploy Backoffice
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'backoffice/package-lock.json'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information (Preview)
        working-directory: ./backoffice
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_BACKOFFICE }}

      - name: Build Preview Artifacts
        working-directory: ./backoffice
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_BACKOFFICE }}

      - name: Deploy Preview to Vercel
        working-directory: ./backoffice
        run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_BACKOFFICE }}
